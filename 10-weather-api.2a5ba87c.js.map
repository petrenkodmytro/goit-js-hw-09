{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAkBMC,EAAeC,SAASC,cAAc,kBACtCC,EAAeF,SAASC,cAAc,YAC5CE,QAAQC,IAAIC,EAAAC,EAAA,GAASC,OAAO,SAC5BR,EAAaS,iBAAiB,UAE9B,SAA4BC,GAC1BA,EAAEC,iBACFb,EAAAc,QAAQC,OACR,IAAMC,EAAOJ,EAAEK,cAAcC,SAASF,KAAKG,MAAMC,OAAOC,cAM9B,GAL1Bf,QAAQC,IAAIS,GAEZX,EAAaiB,UAAY,GAGZ,KAATN,EAEF,YADAhB,EAAAuB,OAAOC,KAAK,mCA/BO,SAAAR,GACrB,OAAOS,MACL,GAAyBC,OAJZ,0CAID,eAAkBA,OAALV,EAAK,yDAC9BW,MAAK,SAAAC,GACL,IAAKA,EAASC,GAE2C,MAAjD,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,M,KA0BlBC,CAAejB,GACZW,MAAK,SAAAO,IAgBV,SAAsBA,GACpB,IAAMC,EAAS,mFAGKT,OADIlB,EAAAC,EAAA,GAASC,OAAO,QAAQ,8BAEhBgB,OADZQ,EAAKE,KAAK,0CAEDV,OADGQ,EAAKG,IAAIC,QAAQ,uCAIpBZ,OAHAQ,EAAKK,KAAKC,KAAKC,QACxC,GACA,2DAGAf,OAFyBQ,EAAKQ,QAAQ,GAAGH,KAAK,2DAG/Bb,OADfQ,EAAKQ,QAAQ,GAAGC,KACjB,kBAIsBjB,OAJNQ,EAAKQ,QAAQ,GAAGE,YAAY,+IAUtBlB,OANAQ,EAAKK,KAAKM,SAASJ,QACpC,GACA,sHAcoBf,OAVHQ,EAAKK,KAAKO,SAASL,QACpC,GACA,8PAYoBf,OAJAQ,EAAKa,OAAOC,IAAI,oJAQhBtB,OAJAQ,EAAKK,KAAKU,SAAS,iJAQnBvB,OAJAQ,EAAKK,KAAKW,SAAS,uIAIHxB,OAAhBQ,EAAKiB,KAAKC,MAAM,4DAK5C/C,EAAagD,mBAAmB,YAAalB,E,CA/DzCmB,CAAapB,E,IAEdqB,OAAM,SAAAC,GAgEX,IACQrB,EAhEFnC,EAAAuB,OAAOkC,QAAQ,yCAgEbtB,EAAU,sCAChB9B,EAAagD,mBAAmB,YAAalB,GA/DzC7B,QAAQC,IAAIiD,E,IAEbE,SAAQ,WACPxD,EAAayD,QACb3D,EAAAc,QAAQ8C,Q","sources":["src/js/10-weather-api.js"],"sourcesContent":["const BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\nconst fetchCountries = city => {\n  return fetch(\n    `${BASE_URL}/weather?q=${city}&appid=e009aff8be670269fac51bd3506bf199&units=metric`\n  ).then(response => {\n    if (!response.ok) {\n      // явно відхиляємо проміс, щоб можна було зловити і обробити помилку\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n};\n\nimport { Notify, Loading } from 'notiflix';\nimport moment from 'moment';\n\nconst seachFormRef = document.querySelector('.js-seach-form');\nconst containerRef = document.querySelector('.weather');\nconsole.log(moment().format('LLLL'));\nseachFormRef.addEventListener('submit', onSearchCitySubmit);\n\nfunction onSearchCitySubmit(e) {\n  e.preventDefault();\n  Loading.dots();\n  const city = e.currentTarget.elements.city.value.trim().toLowerCase();\n  console.log(city);\n\n  containerRef.innerHTML = '';\n\n  // якщо input пустий пошук не виконуємо\n  if (city === '') {\n    Notify.info('Please enter name of the city.');\n    return;\n  }\n\n  fetchCountries(city)\n    .then(data => {\n      // console.log(data);\n      renderMarkup(data);\n    })\n    .catch(error => {\n      Notify.failure('Oops, there is no city with that name');\n      renderError();\n      console.log(error);\n    })\n    .finally(() => {\n      seachFormRef.reset();\n      Loading.remove();\n    });\n}\n\n// https://openweathermap.org/img/wn/02d@2x.png\nfunction renderMarkup(data) {\n  const markup = ` <div class=\"container\">\n  <div class=\"weather-side\">\n    <p class=\"date-day\">${moment().format('LLLL')}</p>\n    <p class=\"city\">${data.name}</p>\n    <p class=\"country\">Country: ${data.sys.country}</p>\n    <h2 class=\"weather-temp\">${data.main.temp.toFixed(\n      1\n    )} C<sup>&#176;</sup></h2>\n    <h3 class=\"weather-desc\">${data.weather[0].main}</h3>\n    <img src=\"https://openweathermap.org/img/wn/${\n      data.weather[0].icon\n    }@2x.png\" alt=\"${data.weather[0].description}\" class=\"weather-icon\"></img>\n    <div class=\"temp-container\">\n      <div>\n        <h4 class=\"title\">min</h4>\n        <h4 class=\"temp\">${data.main.temp_min.toFixed(\n          1\n        )} C<sup>&#176;</sup></h4>\n      </div>\n      <div>\n        <h4 class=\"title\">max</h4>\n        <h4 class=\"temp\">${data.main.temp_max.toFixed(\n          1\n        )} С<sup>&#176;</sup></h4>\n      </div>\n    </div>\n  </div>\n  <div class=\"info-side\">\n    <div class=\"today-info-container\">\n      <div class=\"today-info precipitation\">\n        <span class=\"title\">cloudiness</span>\n        <span class=\"value\">${data.clouds.all} %</span>\n      </div>\n      <div class=\"today-info precipitation\">\n        <span class=\"title\">pressure</span>\n        <span class=\"value\">${data.main.pressure} hPa</span>\n      </div>\n      <div class=\"today-info humidity\">\n        <span class=\"title\">humidity</span>\n        <span class=\"value\">${data.main.humidity} %</span>\n      </div>\n      <div class=\"today-info wind\">\n        <span class=\"title\">wind</span>\n        <span class=\"value\">${data.wind.speed} km/h</span>\n      </div>\n    </div>\n  </div>\n</div>`;\n  containerRef.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction renderError() {\n  const markup = `<h3 class=\"msg\">City not found</h3>`;\n  containerRef.insertAdjacentHTML('beforeend', markup);\n}\n"],"names":["$6JpON","parcelRequire","$d626986e9b7b43bd$var$seachFormRef","document","querySelector","$d626986e9b7b43bd$var$containerRef","console","log","$parcel$interopDefault","$jR9u2","format","addEventListener","e","preventDefault","Loading","dots","city","currentTarget","elements","value","trim","toLowerCase","innerHTML","Notify","info","fetch","concat","then","response","ok","Error","status","json","$d626986e9b7b43bd$var$fetchCountries","data","markup","name","sys","country","main","temp","toFixed","weather","icon","description","temp_min","temp_max","clouds","all","pressure","humidity","wind","speed","insertAdjacentHTML","$d626986e9b7b43bd$var$renderMarkup","catch","error","failure","finally","reset","remove"],"version":3,"file":"10-weather-api.2a5ba87c.js.map"}