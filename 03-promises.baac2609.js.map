{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SA2BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAES,MAA9BC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnCbL,EAAKa,iBAAiB,UAEtB,SAA+BC,GAC7BA,EAAEC,iBAE4B,MAAtBV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWlB,EAAKmB,SAEC,IAAjC,IAAIC,EAAI,EAAGA,GAAKC,OAAOH,EAAOI,OAAQF,GAAK,EAAG,CAEM,IAAnDG,EAAiBF,OAAOL,EAAMM,OAASF,EAAIC,OAAOJ,EAAKK,OAE3DnB,EAAciB,EAAGG,GACdC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoBzB,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromiseSubmit);\n\nfunction onCreatePromiseSubmit(e) {\n  e.preventDefault();\n  // деструктуризація елементів форми\n  const { delay, step, amount } = form.elements;\n  // цикл для створення необхідної кіл-ті функцій\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    // затримка, що враховує першу затримку (delay), введену користувачем, і крок (step).\n    let delayOfPromise = Number(delay.value) + i * Number(step.value);\n\n    createPromise(i, delayOfPromise)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    // генерація умови true або false для виконання промісу\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n}\n\n// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n// Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","elements","i","Number","value","delayOfPromise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.baac2609.js.map"}