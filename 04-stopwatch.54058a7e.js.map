{"mappings":"YAEA,IAAMA,EAAcC,SAASC,cAAc,sBACrCC,EAAaF,SAASC,cAAc,qBACpCE,EAAcH,SAASC,cAAc,sBACrCG,EAAcJ,SAASC,cAAc,mBACrCI,EAAeL,SAASC,cAAc,oBACtCK,EAAiBN,SAASC,cAAc,sBACxCM,EAAiBP,SAASC,cAAc,sBACxCO,EAAqBR,SAASC,cAAc,0BAElDE,EAAYM,UAAW,EACvB,IAAIC,EAAc,KACdC,EAAc,EAMlB,SAASC,IAEsCb,EAAjCU,UAAW,EACvBN,EAAYM,UAAW,EAE2B,IAA5CI,EAAYC,KAAKC,MAAQJ,EAC/BD,EAAcM,aAAY,WACxB,IAAMC,EAAcH,KAAKC,MAEzBG,EADAP,EAAcM,EAAcJ,E,GAE3B,G,CA0BL,SAASK,EAAkBC,GACzB,IAAuDC,EAQzD,SAAmBD,GAGjB,IAAME,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNE,EAAOC,EAAeC,KAAKC,MAAMT,EAAKK,IAEtCK,EAAQH,EAAeC,KAAKC,MAAMT,EAAMK,EAAOD,IAE/CO,EAAUJ,EAAeC,KAAKC,MAAMT,EAAOK,EAAOD,EAAQD,IAE1DS,EAAUL,EACdC,KAAKC,MAAMT,EAAQK,EAAOD,EAAQD,EAAUD,IAGxCW,EAAcN,EAAeC,KAAKC,MAAMT,EAAM,IAAQ,KAEtC,MAAf,CAAEM,OAAMI,QAAOC,UAASC,UAASC,c,CA7BeC,CAAUd,GAAzDM,EAA+CL,EAA/CK,KAAMI,EAAyCT,EAAzCS,MAAOC,EAAkCV,EAAlCU,QAASC,EAAyBX,EAAzBW,QAASC,EAAgBZ,EAAhBY,YACvC5B,EAAY8B,YAAcT,EAC1BpB,EAAa6B,YAAcL,EAC3BvB,EAAe4B,YAAcJ,EAC7BvB,EAAe2B,YAAcH,EAC7BvB,EAAmB0B,YAAcF,C,CA2BnC,SAASN,EAAeS,GAEwD,OAAvEC,OAAOD,GAAOE,SAAS,EAAG,I,CA3EnCtC,EAAYuC,iBAAiB,QAAS1B,GACtCV,EAAWoC,iBAAiB,SAgB5B,WAESC,cAAO7B,GACdP,EAAY+B,YAAc,QAC1BvB,EAAc,EAE+BZ,EAAjCU,UAAW,EACvBN,EAAYM,UAAW,EACvBS,EAAkBP,E,IAvBpBR,EAAYmC,iBAAiB,SA0B7B,WACkC,UAA5BnC,EAAY+B,aACd/B,EAAY+B,YAAc,WAC1BK,cAAc7B,GAEM8B,QAAZC,IAAI9B,KAEZR,EAAY+B,YAAc,QAC1BtB,I","sources":["src/js/04-stopwatch.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\nconst btnStartRef = document.querySelector('button[data-start]');\nconst btnStopRef = document.querySelector('button[data-stop]');\nconst btnPauseRef = document.querySelector('button[data-pause]');\nconst spanDaysRef = document.querySelector('span[data-days]');\nconst spanHoursRef = document.querySelector('span[data-hours]');\nconst spanMinutesRef = document.querySelector('span[data-minutes]');\nconst spanSecondsRef = document.querySelector('span[data-seconds]');\nconst spanMiliSecondsRef = document.querySelector('span[data-miliseconds]');\n\nbtnPauseRef.disabled = true;\nlet StopwatchId = null;\nlet elapsedTime = 0;\n\nbtnStartRef.addEventListener('click', onStartStopwatchClick);\nbtnStopRef.addEventListener('click', onStopStopwatchClick);\nbtnPauseRef.addEventListener('click', onPauseStopwatchClick);\n\nfunction onStartStopwatchClick() {\n  // деактивація кнопки старта та активація кнопки пауза\n  btnStartRef.disabled = true;\n  btnPauseRef.disabled = false;\n  // Date.now() не створює екземпляр, повертає поточний час у мілісекундах\n  const startTime = Date.now() - elapsedTime;\n  StopwatchId = setInterval(() => {\n    const currentTime = Date.now();\n    elapsedTime = currentTime - startTime;\n    onUpdateStopwatch(elapsedTime);\n  }, 10);\n}\n\nfunction onStopStopwatchClick() {\n  // зупинка Stopwatch\n  clearInterval(StopwatchId);\n  btnPauseRef.textContent = 'Pause';\n  elapsedTime = 0;\n  // активація кнопки старта та деактивація кнопки пауза\n  btnStartRef.disabled = false;\n  btnPauseRef.disabled = true;\n  onUpdateStopwatch(elapsedTime);\n}\n\nfunction onPauseStopwatchClick() {\n  if (btnPauseRef.textContent === 'Pause') {\n    btnPauseRef.textContent = 'Continue';\n    clearInterval(StopwatchId);\n    // вивід у консоль час кола\n    console.log(elapsedTime);\n  } else {\n    btnPauseRef.textContent = 'Pause';\n    onStartStopwatchClick();\n  }\n}\n\nfunction onUpdateStopwatch(ms) {\n  const { days, hours, minutes, seconds, miliseconds } = convertMs(ms);\n  spanDaysRef.textContent = days;\n  spanHoursRef.textContent = hours;\n  spanMinutesRef.textContent = minutes;\n  spanSecondsRef.textContent = seconds;\n  spanMiliSecondsRef.textContent = miliseconds;\n}\n\nfunction convertMs(ms) {\n  // Для підрахунку значень використовуй готову функцію convertMs, де ms - різниця між кінцевою і поточною датою в мілісекундах.\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n  // Remaining miliseconds\n  const miliseconds = addLeadingZero(Math.floor((ms % 1000) / 10));\n  // результат роботи функції\n  return { days, hours, minutes, seconds, miliseconds };\n}\n\nfunction addLeadingZero(value) {\n  // функція addLeadingZero(value), яка використовує метод padStart() і перед рендерингом інтефрейсу форматує значення у форматі xx:xx:xx:xx\n  return String(value).padStart(2, '0');\n}\n\n// Метод getTime() повертає числове значення цієї дати (timestamp) - кількість мілісекунд, що минула з півночі 1 січня 1970 року.\n// const date = new Date();\n// console.log(date.getTime());\n\n// console.log('stop Stopwatch');\n// Notiflix.Notify.success('Stopwatch is stoped');\n// Notiflix.Report.success('Success', 'Stopwatch is stoped', 'Ok');\n"],"names":["$784742283628e802$var$btnStartRef","document","querySelector","$784742283628e802$var$btnStopRef","$784742283628e802$var$btnPauseRef","$784742283628e802$var$spanDaysRef","$784742283628e802$var$spanHoursRef","$784742283628e802$var$spanMinutesRef","$784742283628e802$var$spanSecondsRef","$784742283628e802$var$spanMiliSecondsRef","disabled","$784742283628e802$var$StopwatchId","$784742283628e802$var$elapsedTime","$784742283628e802$var$onStartStopwatchClick","startTime","Date","now","setInterval","currentTime","$784742283628e802$var$onUpdateStopwatch","ms","ref","second","minute","hour","day","days","$784742283628e802$var$addLeadingZero","Math","floor","hours","minutes","seconds","miliseconds","$784742283628e802$var$convertMs","textContent","value","String","padStart","addEventListener","clearInterval","console","log"],"version":3,"file":"04-stopwatch.54058a7e.js.map"}